/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package calculatorpackage;

/**
 *
 * @author Shanti
 */
public class Calculator extends javax.swing.JFrame {

    /**
     * Creates new form Calculator
     */
    public Calculator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton7 = new javax.swing.JButton();
        b1 = new javax.swing.JButton();
        b0 = new javax.swing.JButton();
        b_equal = new javax.swing.JButton();
        b_plus = new javax.swing.JButton();
        b2 = new javax.swing.JButton();
        bdot = new javax.swing.JButton();
        b_minus = new javax.swing.JButton();
        b3 = new javax.swing.JButton();
        b6 = new javax.swing.JButton();
        b5 = new javax.swing.JButton();
        b4 = new javax.swing.JButton();
        b_multiply = new javax.swing.JButton();
        b9 = new javax.swing.JButton();
        b8 = new javax.swing.JButton();
        b7 = new javax.swing.JButton();
        b_backspace = new javax.swing.JButton();
        b_division = new javax.swing.JButton();
        b_modulus = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        copyOfLabel_Disply = new javax.swing.JLabel();
        label_Disply = new javax.swing.JLabel();
        b_Plus_Minus = new javax.swing.JButton();
        b_CE = new javax.swing.JButton();
        b_del = new javax.swing.JButton();
        bSqrt = new javax.swing.JButton();
        bReciprocal = new javax.swing.JButton();

        jButton7.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        b1.setText("1");
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });

        b0.setText("0");
        b0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b0ActionPerformed(evt);
            }
        });

        b_equal.setText("=");
        b_equal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_equalActionPerformed(evt);
            }
        });

        b_plus.setText("+");
        b_plus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_plusActionPerformed(evt);
            }
        });

        b2.setText("2");
        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });

        bdot.setText(".");
        bdot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bdotActionPerformed(evt);
            }
        });

        b_minus.setText("-");
        b_minus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_minusActionPerformed(evt);
            }
        });

        b3.setText("3");
        b3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b3ActionPerformed(evt);
            }
        });

        b6.setText("6");
        b6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b6ActionPerformed(evt);
            }
        });

        b5.setText("5");
        b5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b5ActionPerformed(evt);
            }
        });

        b4.setText("4");
        b4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b4ActionPerformed(evt);
            }
        });

        b_multiply.setText("*");
        b_multiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_multiplyActionPerformed(evt);
            }
        });

        b9.setText("9");
        b9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b9ActionPerformed(evt);
            }
        });

        b8.setText("8");
        b8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b8ActionPerformed(evt);
            }
        });

        b7.setText("7");
        b7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b7ActionPerformed(evt);
            }
        });

        b_backspace.setText("C");
        b_backspace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_backspaceActionPerformed(evt);
            }
        });

        b_division.setText("/");
        b_division.setToolTipText("");
        b_division.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_divisionActionPerformed(evt);
            }
        });

        b_modulus.setText("mod");
        b_modulus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_modulusActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel1.setToolTipText("");

        copyOfLabel_Disply.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        copyOfLabel_Disply.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        copyOfLabel_Disply.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        copyOfLabel_Disply.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        label_Disply.setBackground(new java.awt.Color(255, 255, 255));
        label_Disply.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        label_Disply.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label_Disply.setText("0");
        label_Disply.setToolTipText("");
        label_Disply.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        label_Disply.setCursor(new java.awt.Cursor(java.awt.Cursor.SE_RESIZE_CURSOR));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(label_Disply, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(copyOfLabel_Disply, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(copyOfLabel_Disply, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label_Disply, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        b_Plus_Minus.setText("\u00B1");
        b_Plus_Minus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_Plus_MinusActionPerformed(evt);
            }
        });

        b_CE.setText("CE");
        b_CE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_CEActionPerformed(evt);
            }
        });

        b_del.setText("<--");
        b_del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_delActionPerformed(evt);
            }
        });

        bSqrt.setText("\u221A");
        bSqrt.setToolTipText("");
        bSqrt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSqrtActionPerformed(evt);
            }
        });

        bReciprocal.setText("1/x");
        bReciprocal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bReciprocalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(b_modulus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(b4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(b5, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(b6, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(b_multiply, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(b7, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(b_del, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(b_CE, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(b8, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(b9, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(b_division, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(b_backspace, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(bSqrt, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(bReciprocal, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(b_Plus_Minus, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(b0, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bdot, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(b3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(b_plus, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b_minus, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_equal, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_backspace, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_CE, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_del, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bSqrt, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bReciprocal, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b9, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_division, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_Plus_Minus, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_multiply, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_modulus, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b_minus, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(b_plus, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b0, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bdot, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(b_equal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b_equalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_equalActionPerformed
     Calculator c=new Calculator();
          
          if(isOperatorIsPressed){}
          else
              num2=Double.parseDouble(label_Disply.getText());
              copyOfNum1=c.operatorChoice(num1, num2, operator);
              num1=Double.parseDouble(copyOfNum1);
              if(num1==Math.floor(num1))
                  label_Disply.setText(""+(int)Math.floor(num1));
              else
                  label_Disply.setText(""+num1);
           isOperatorIsPressed=true;
      copyOfLabel_Disply.setText("");
    }//GEN-LAST:event_b_equalActionPerformed

    private void b_modulusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_modulusActionPerformed
       Calculator c=new Calculator();
        if(whichOperand==false)
        {
            num1=Double.parseDouble(label_Disply.getText());
            Value1=label_Disply.getText();
            whichOperand=true;
        }
        else
        {
            if(isOperatorIsPressed){}
            else
            {
                num2=Double.parseDouble(label_Disply.getText());
                Value1=label_Disply.getText();
                copyOfNum1=c.operatorChoice(num1, num2, operator);
                num1=Double.parseDouble(copyOfNum1);
                if(num1 == Math.floor(num1))
                    label_Disply.setText(""+(int)Math.floor(num1));
                else
                    label_Disply.setText(""+num1);   
            }       
        }
        if(Value2 == false)
            copyOfLabel_Disply.setText(Value1+"%");
        else
        { 
            if(isOperatorIsPressed)
            {
                 if(operator != 5)
                    copyOfLabel_Disply.setText((copyOfLabel_Disply.getText().substring(0,copyOfLabel_Disply.getText().length()-1)) +"%");
            }
            else
            copyOfLabel_Disply.setText(copyOfLabel_Disply.getText()+Value1+"%");
        }
        isOperatorIsPressed=true;
        operator=5;
        Value2=true;
    }//GEN-LAST:event_b_modulusActionPerformed

    private void b0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b0ActionPerformed
        if(label_Disply.getText().equals("0") || isOperatorIsPressed)
            label_Disply.setText("0");
        else
            label_Disply.setText(label_Disply.getText()+"0");
        isOperatorIsPressed=false;
    }//GEN-LAST:event_b0ActionPerformed

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed
        if(label_Disply.getText().equals("0") || isOperatorIsPressed)
            label_Disply.setText("1");
        else
            label_Disply.setText(label_Disply.getText()+"1");
        isOperatorIsPressed=false;
    }//GEN-LAST:event_b1ActionPerformed

    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2ActionPerformed
        if(label_Disply.getText().equals("0") || isOperatorIsPressed)
            label_Disply.setText("2");
        else
            label_Disply.setText(label_Disply.getText()+"2");
        isOperatorIsPressed=false;
    }//GEN-LAST:event_b2ActionPerformed

    private void b3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b3ActionPerformed
        if(label_Disply.getText().equals("0") || isOperatorIsPressed)
            label_Disply.setText("3");
        else
            label_Disply.setText(label_Disply.getText()+"3");
        isOperatorIsPressed=false;
    }//GEN-LAST:event_b3ActionPerformed

    private void b4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b4ActionPerformed
        if(label_Disply.getText().equals("0") || isOperatorIsPressed)
            label_Disply.setText("4");
        else
            label_Disply.setText(label_Disply.getText()+"4");
        isOperatorIsPressed=false;
    }//GEN-LAST:event_b4ActionPerformed

    private void b5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b5ActionPerformed
        if(label_Disply.getText().equals("0") || isOperatorIsPressed)
            label_Disply.setText("5");
        else
            label_Disply.setText(label_Disply.getText()+"5");
        isOperatorIsPressed=false;
    }//GEN-LAST:event_b5ActionPerformed

    private void b6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b6ActionPerformed
        if(label_Disply.getText().equals("0") || isOperatorIsPressed)
            label_Disply.setText("6");
        else
            label_Disply.setText(label_Disply.getText()+"6");
        isOperatorIsPressed=false;
    }//GEN-LAST:event_b6ActionPerformed

    private void b7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b7ActionPerformed
        if(label_Disply.getText().equals("0") || isOperatorIsPressed)
            label_Disply.setText("7");
        else
            label_Disply.setText(label_Disply.getText()+"7");
        isOperatorIsPressed=false;
    }//GEN-LAST:event_b7ActionPerformed

    private void b8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b8ActionPerformed
        if(label_Disply.getText().equals("0") || isOperatorIsPressed)
            label_Disply.setText("8");
        else
            label_Disply.setText(label_Disply.getText()+"8");
        isOperatorIsPressed=false;
    }//GEN-LAST:event_b8ActionPerformed

    private void b9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b9ActionPerformed
        if(label_Disply.getText().equals("0") || isOperatorIsPressed)
            label_Disply.setText("9");
        else
            label_Disply.setText(label_Disply.getText()+"9");
        isOperatorIsPressed=false;
    }//GEN-LAST:event_b9ActionPerformed

    private void bdotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bdotActionPerformed
        if(label_Disply.getText().equals("0") || isOperatorIsPressed)
        {
            label_Disply.setText("0.");
            isDot=true;
        }
        else
        {
            if(isDot){}
            else
            {
                label_Disply.setText(label_Disply.getText()+".");
                isDot=true;
            }    
        }
        isOperatorIsPressed=false;
    }//GEN-LAST:event_bdotActionPerformed

    private void b_plusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_plusActionPerformed
        Calculator c=new Calculator();
        if(whichOperand==false)
        {
            num1=Double.parseDouble(label_Disply.getText());
            Value1=label_Disply.getText();
            whichOperand=true;
        }
        else
        {
            if(isOperatorIsPressed){}
            else
            {
                num2=Double.parseDouble(label_Disply.getText());
                Value1=label_Disply.getText();
                copyOfNum1=c.operatorChoice(num1, num2, operator);
                num1=Double.parseDouble(copyOfNum1);
            }
            if(num1 == Math.floor(num1))
                  label_Disply.setText(""+(int)Math.floor(num1));
            else
                  label_Disply.setText(""+num1);
        }
        if(sqrtSelect==false)
        {
            if(Value2 == false)
               copyOfLabel_Disply.setText(Value1+"+");
            else
            {
                if(isOperatorIsPressed)
                {
                    if(operator != 1)//for overridding symbol purpose i.e if select + and then change into - thi only showing purpose only on top of the screen.
                        copyOfLabel_Disply.setText((copyOfLabel_Disply.getText().substring(0,copyOfLabel_Disply.getText().length()-1)) +"+");
                }
                else
                   copyOfLabel_Disply.setText(copyOfLabel_Disply.getText()+Value1+"+");

            }
        } 
        else 
             copyOfLabel_Disply.setText(copyOfLabel_Disply.getText()+"+");
            Value2=true;
            isOperatorIsPressed=true;
            operator=1;
            isDot=false;
            sqrtSelect=false;
    }//GEN-LAST:event_b_plusActionPerformed

    private void b_minusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_minusActionPerformed
        Calculator c=new Calculator();
        if(whichOperand==false)
        {
            num1=Double.parseDouble(label_Disply.getText());
            Value1=label_Disply.getText();
            whichOperand=true;
        }
        else
        {
            if(isOperatorIsPressed){}
            else
            {
                num2=Double.parseDouble(label_Disply.getText());
                Value1=label_Disply.getText();
                copyOfNum1=c.operatorChoice(num1, num2, operator);
                num1=Double.parseDouble(copyOfNum1);
                if(num1 == Math.floor(num1))
                      label_Disply.setText(""+(int)Math.floor(num1));
                 else
                      label_Disply.setText(""+num1);      
            }
        }
        if(sqrtSelect==false)
        {
            if(Value2 == false)
               copyOfLabel_Disply.setText(Value1+"-");
            else
            {
                if(isOperatorIsPressed)
                {
                     if(operator != 2)
                        copyOfLabel_Disply.setText((copyOfLabel_Disply.getText().substring(0,copyOfLabel_Disply.getText().length()-1)) +"-");
                }
                else
                   copyOfLabel_Disply.setText(copyOfLabel_Disply.getText()+Value1+"-");
            }
       } 
        else
            copyOfLabel_Disply.setText("-");
        Value2=true;
        isOperatorIsPressed=true;
        operator=2;
        isDot=false;
        sqrtSelect=false;
            
        
    }//GEN-LAST:event_b_minusActionPerformed

    private void b_multiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_multiplyActionPerformed
       Calculator c=new Calculator();
        if(whichOperand==false)
        {
            num1=Double.parseDouble(label_Disply.getText());
            Value1=label_Disply.getText();
            whichOperand=true;
        }
        else
        {
            if(isOperatorIsPressed){}
            else
            {
                num2=Double.parseDouble(label_Disply.getText());
                Value1=label_Disply.getText();
                copyOfNum1=c.operatorChoice(num1, num2, operator);
                num1=Double.parseDouble(copyOfNum1);
               if(num1 == Math.floor(num1))
                    label_Disply.setText(""+(int)Math.floor(num1));
                else
                    label_Disply.setText(""+num1);
            }
        } 
        if(sqrtSelect==false)
        {
            if(Value2 == false)
               copyOfLabel_Disply.setText(Value1+"*");
            else
                if(isOperatorIsPressed)
                {
                     if(operator != 3)
                        copyOfLabel_Disply.setText((copyOfLabel_Disply.getText().substring(0,copyOfLabel_Disply.getText().length()-1)) +"*");
                }
                else
                   copyOfLabel_Disply.setText(copyOfLabel_Disply.getText()+Value1+"*");
        }
        else
            copyOfLabel_Disply.setText("*");
        Value2=true;
        isOperatorIsPressed=true;
        operator=3;
        isDot=false;
        sqrtSelect=false;
        
            
    }//GEN-LAST:event_b_multiplyActionPerformed

    private void b_divisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_divisionActionPerformed
        Calculator c=new Calculator();
        if(whichOperand==false)
         {
             num1 = Double.parseDouble(label_Disply.getText());
             Value1=label_Disply.getText();
             whichOperand=true;
         }
        else{
             if(isOperatorIsPressed){}
             else
             {
                 num2=Double.parseDouble(label_Disply.getText());
                 Value1=label_Disply.getText();
                 copyOfNum1=c.operatorChoice(num1, num2, operator);
                 num1=Double.parseDouble(copyOfNum1);
                 if(num1==Math.floor(num1))
                       label_Disply.setText(""+(int)Math.floor(num1));
                 else
                       label_Disply.setText(""+num1);
             }
        }
        if(sqrtSelect==false)
        {
            if(Value2 == false)
               copyOfLabel_Disply.setText(Value1+"/");
            else
            {
                if(isOperatorIsPressed)
                {
                     if(operator != 4)
                        copyOfLabel_Disply.setText((copyOfLabel_Disply.getText().substring(0,copyOfLabel_Disply.getText().length()-1)) +"/");
                }
                else
                   copyOfLabel_Disply.setText(copyOfLabel_Disply.getText()+Value1+"/");
            }
        }
        else
             copyOfLabel_Disply.setText("/");
        operator=4;
        Value2=true;
        
        isOperatorIsPressed=true;
        isDot=false;
        sqrtSelect=false;
    }//GEN-LAST:event_b_divisionActionPerformed

    private void b_backspaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_backspaceActionPerformed
        num1=0;
        num2=0;
        isDot=isOperatorIsPressed=whichOperand=false;
        label_Disply.setText("0");
        Value2=false;
        copyOfLabel_Disply.setText("");
        sqrtSelect=false;
        
    }//GEN-LAST:event_b_backspaceActionPerformed

    private void b_Plus_MinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_Plus_MinusActionPerformed
        if(label_Disply.getText().equals("0"))
        {}
        else
        {
            Value3=Double.parseDouble(label_Disply.getText());
            if(Value3 > 0)
                label_Disply.setText("-"+label_Disply.getText());
            else
                label_Disply.setText(label_Disply.getText().substring(1, label_Disply.getText().length()));
            
        }
        
    }//GEN-LAST:event_b_Plus_MinusActionPerformed

    private void b_CEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_CEActionPerformed

            label_Disply.setText("0");
    }//GEN-LAST:event_b_CEActionPerformed

    private void b_delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_delActionPerformed
        if(isOperatorIsPressed){}
     else{
        if(label_Disply.getText().length()== 1 )
        {
           label_Disply.setText("0");
           isDot=false;
        }
        else{
            if(label_Disply.getText().contains("."))
                 label_Disply.setText(label_Disply.getText().substring(0,label_Disply.getText().length()-1));
            else
            {
                label_Disply.setText(label_Disply.getText().substring(0,label_Disply.getText().length()-1));
                isDot=false;
            }
        }
     }
        
        
    }//GEN-LAST:event_b_delActionPerformed

    private void bSqrtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSqrtActionPerformed
        if(sqrtSelect==false)
        {
            sqrtValiable=Math.sqrt(Double.parseDouble(label_Disply.getText()));
            Value1=label_Disply.getText();
            if(sqrtValiable==Math.floor(sqrtValiable))
                label_Disply.setText(""+(int)Math.floor(sqrtValiable));
            else
                 label_Disply.setText(""+sqrtValiable);
            if(Value2 ==false)
               copyOfLabel_Disply.setText("sqrt("+Value1+")");
            else
               copyOfLabel_Disply.setText(copyOfLabel_Disply.getText()+"sqrt("+Value1+")");
            Value2=true;
        }
        sqrtSelect=true;
    }//GEN-LAST:event_bSqrtActionPerformed

    private void bReciprocalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bReciprocalActionPerformed
        double z=Double.parseDouble((label_Disply.getText()));
        z=1/z;
        if(z==Math.floor(z))
            label_Disply.setText(""+(int)Math.floor(z));
        else
            label_Disply.setText(""+z);
    }//GEN-LAST:event_bReciprocalActionPerformed

    public String operatorChoice(double num1,double num2,int operator)
    {
        switch(operator)
        {
            case 1:
               return (""+(num1+num2));
            case 2:
                return (""+(num1-num2));
            case 3:
                return (""+(num1*num2));
            case 4:
                if(num2 !=0)
                  return (""+(num1/num2));
            case 5:
                   return(""+(num1 % num2));
          }
        return ("Cannot Divide By Zero");
    }
    private double num1,num2;//variable of 2 numbers
    private boolean isOperatorIsPressed=false;//(+,-,*,/,%) any one is click or not
    private boolean isDot=false;//only one dot shouble be come before or/and after operator
    private int operator=0;// (1(+) ,2(-), 3(*), 4(/),5(%))
    private boolean whichOperand=false;
    private String Value1;
    private boolean Value2=false;
    private String copyOfNum1;
    private Double Value3;//for plus,Minus(+/-)
    private double sqrtValiable;
    private boolean sqrtSelect;
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calculator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b0;
    private javax.swing.JButton b1;
    private javax.swing.JButton b2;
    private javax.swing.JButton b3;
    private javax.swing.JButton b4;
    private javax.swing.JButton b5;
    private javax.swing.JButton b6;
    private javax.swing.JButton b7;
    private javax.swing.JButton b8;
    private javax.swing.JButton b9;
    private javax.swing.JButton bReciprocal;
    private javax.swing.JButton bSqrt;
    private javax.swing.JButton b_CE;
    private javax.swing.JButton b_Plus_Minus;
    private javax.swing.JButton b_backspace;
    private javax.swing.JButton b_del;
    private javax.swing.JButton b_division;
    private javax.swing.JButton b_equal;
    private javax.swing.JButton b_minus;
    private javax.swing.JButton b_modulus;
    private javax.swing.JButton b_multiply;
    private javax.swing.JButton b_plus;
    private javax.swing.JButton bdot;
    private javax.swing.JLabel copyOfLabel_Disply;
    private javax.swing.JButton jButton7;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JLabel label_Disply;
    // End of variables declaration//GEN-END:variables
}
